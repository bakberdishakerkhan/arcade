from random import *
import pygame

pygame.init()

font = pygame.font.Font(None, 72)

win_width = 800
win_height = 600
left_bound = win_width / 40
right_bound = win_width - 8 * left_bound
shift = 0

x_start, y_start = 20, 10


img_file_back = 'phon1.png'
img_file_hero = 'player.png'
img_file_tresure = 'treasure.png'
img_file_bomb = 'bomb.png'
img_file_enemy = 'enemy.png'

FPS = 60

C_WHITE = (255, 255, 255)
C_DARK = (48, 48, 0)
C_YELLOW = (255, 255, 87)
C_GREEN = (32, 128, 32)
C_RED = (255, 0, 0)
C_BLACK = (0, 0, 0)

class FinalSprite(pygame.sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.transform.scale(pygame.image.load(player_image), (60 ,120))
        self.speed = player_speed

        self.rect = self.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

class Hero(pygame.sprite.Sprite):
    def __init__(self, filename, x_speed=0, y_speed=0, x=x_start, y=y_start, width=120, height=120):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.transform.scale(pygame.image.load(filename), (width, height)).convert_alpha()

        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y 
        self.x_speed = x_speed
        self.y_speed =y_speed

        self.stands_on = False

    def gravitate(self):
        self.y_speed += 0.25

    def jump(self, y):
        if self.stands_on:
            self.y_speed = y
    
    def update(self):
        self.rect.x += self.x_speed

        platforms_touched = pygame.sprite.spritecollide(self, barriers, False)
        if self.x_speed > 0:
            for p in platforms_touched:
                self.rect.right = min(self.rect.right, p.rect.left)
        elif x_speed < 0:
            for p in platforms_touched:
                self.rect.left = max(self.rect.left, p.rect.rigth)

        self.gravitate()
        self.rect.y += self.y_speed

        platforms_touched = pygame.sprite.spritecollide(self, barriers, False)
        if self.y_speed > 0:
            for p in platforms_touched:
                self.y_speed = 0
                if p.rect.top < self.rect.bottom:
                    self.rect.bottom = p.rect.top
                    self.stands_on = p
        elif self.y_speed < 0:
            self.stands_on = False
            for p in platforms_touched:
                self.y_speed = 0
                self.rect.top = max(self.rect.top, p.rect.bottom)

class Wall(pygame.sprite.Sprite):
    def __init__(self, x=20, y=0, width=120, height=120, color=C_GREEN):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.Surface([width, height])
        self.image.fill(color)

        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y 

class Enemy(pygame.sprite.Sprite):
    def __init__(self, x=0, y=0, filename=img_file_enemy, width=100, height=100):

        self.image = pygame.transform.scale(pygame.image.load(filename), (width, height)).convert_alpha()
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y 

    def update(self):
        self.rect.x += randint(-5, 5)
        self.rect.y += randint(-5, 5)

pygame.display.set_caption("RED_BALL")
window = pygame.display.set_mode([win_width, win_height])

back = pygame.transform.scale(pygame.image.load(img_file_back).convert(), (win_width, win_height))

all_sprites = pygame.sprite.Group()

barriers = pygame.sprite.Group()

enemies = pygame.sprite.Group()

bombs = pygame.sprite.Group()

robin = Hero(img_file_hero)
all_sprites.add(robin)

w = Wall(50, 150, 480, 20)
barriers.add(w)
all_sprites.add(w)

w = Wall(700, 50, 50, 360)
barriers.add(w)
all_sprites.add(w)

w = Wall(350, 380, 640, 20)
barriers.add(w)
all_sprites.add(w)

w = Wall(-200, 590, 1600, 20)
barriers.add(w)
all_sprites.add(w)


en = Enemy(50, 480)
all_sprites.add(en)
enemies.add(en)

en = Enemy(400, 480)
all_sprites.add(en)
enemies.add(en)


bomb = Enemy(550, 520, img_file_bomb, 60, 60)
bombs.add(bomb)

pr = FinalSprite(img_file_tresure, win_width + 500, win_height - 150, 0)
all_sprites.add(pr)


run = True 
finished = False

while run:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                robin.x_speed = -5
            elif event.key == pygame.K_RIGHT:
                robin.x_speed = 5
            elif event.key == pygame.K_UP:
                robin.jump(-7)
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT:
                robin.x_speed = 0
            elif event.key == pygame.K_RIGHT:
                robin.x_speed = 0

    if not finished:
        all_sprites.update()

        pygame.sprite.groupcollide(bombs, all_sprites, True, True)

        if pygame.sprite.spritecollide(robin, enemies, False):
            robin.kill()
        if(
            robin.rect.x > right_bound and robin.x_speed > 0
            or
            robin.rect.x < left_bound and robin.x_speed < 0
        ):
            shift += robin.x_speed

            for s in all_sprites:
                s.rect.x -= robin.x_speed
            for s in bombs:
                s.rect.x -= robin.x_speed

        local_shift = shift % win_width
        window.blit(back, (local_shift, 0))
        if local_shift != 0:
            window.blit(back, (local_shift - win_width, 0))

        all_sprites.draw(window)

        bombs.draw(window)

        if pygame.sprite.collide_rect(robin, pr):
            finished = True
            window.fill(C_BLACK)

            text = font.render("YOU WIN!", 1, C_RED)
            window.blit(text, (250, 250))

        if robin not in all_sprites or robin.rect.top > win_height:
            finished = True
            window.fill(C_BLACK)

            text = font.render("GAME OVER!", 1, C_RED)
            window.blit(text, (250, 250))

    pygame.display.update()

    pygame.time.delay(20)
